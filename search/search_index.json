{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home AppBox is a tool for developers to build and deploy Development and In-house applications directly to the devices from your Dropbox account. Why AppBox? AppBox \ud83d\udd11 Auto App Signing \ud83d\ude80 Auto Upload on Dropbox or AppStore after Archive \ud83d\udd17 Keep same installation link for the same app \ud83d\udd87\ufe0f Install previous version with same installation link \u2709\ufe0f Auto E-Mail App Distribution Link \ud83d\udd0c Auto Shutdown Mac after Distribution \ud83d\udce6 Maximum Upload Size - Equal to your Dropbox account storage \ud83d\udcc5 Uploaded App Expiration - Until you delete from your Dropbox \u2728 Unlimited app installations \ud83d\udd25 Auto Restart Upload After Network Change or Failure \ud83c\udfa9 Easy setup assistant to get started in a few minutes \ud83d\udd27 Slack, Microsoft Teams and Hangout Chat Webhook Integration \ud83e\udd14 Dashboard \ud83d\udea2 Jenkins Support How to use AppBox Download and Open AppBox Link your Dropbox account with AppBox. Select and upload the iOS application \"OR\" select project/workspace to archive and upload the iOS application. Send the link to your testers, clients, friends or even use it yourself. Open the link in the browser on the device and click on install. System requirements Currently, AppBox is only supported to run on macOS 10.10 or later.","title":"Home"},{"location":"#home","text":"AppBox is a tool for developers to build and deploy Development and In-house applications directly to the devices from your Dropbox account.","title":"Home"},{"location":"#why-appbox","text":"AppBox \ud83d\udd11 Auto App Signing \ud83d\ude80 Auto Upload on Dropbox or AppStore after Archive \ud83d\udd17 Keep same installation link for the same app \ud83d\udd87\ufe0f Install previous version with same installation link \u2709\ufe0f Auto E-Mail App Distribution Link \ud83d\udd0c Auto Shutdown Mac after Distribution \ud83d\udce6 Maximum Upload Size - Equal to your Dropbox account storage \ud83d\udcc5 Uploaded App Expiration - Until you delete from your Dropbox \u2728 Unlimited app installations \ud83d\udd25 Auto Restart Upload After Network Change or Failure \ud83c\udfa9 Easy setup assistant to get started in a few minutes \ud83d\udd27 Slack, Microsoft Teams and Hangout Chat Webhook Integration \ud83e\udd14 Dashboard \ud83d\udea2 Jenkins Support","title":"Why AppBox?"},{"location":"#how-to-use-appbox","text":"Download and Open AppBox Link your Dropbox account with AppBox. Select and upload the iOS application \"OR\" select project/workspace to archive and upload the iOS application. Send the link to your testers, clients, friends or even use it yourself. Open the link in the browser on the device and click on install.","title":"How to use AppBox"},{"location":"#system-requirements","text":"Currently, AppBox is only supported to run on macOS 10.10 or later.","title":"System requirements"},{"location":"ContinuousIntegration/cicdforappstore/","text":"Hello","title":"Cicdforappstore"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/","text":"How to use AppBox with Jenkins and GitLab for CI and CD? Before beginning to this article make sure Jenkins Server and AppBox is already setup and running. This article covers how to use Jenkins and AppBox for Build Automation and Deployment of Development, Ad-Hoc and In-house (Enterprise) iOS applications directly to the devices from your Dropbox account. 1. Setup Xcode Project for AppBox 1.1 AppBox Project setting plist Add a appbox.plist file in your project main directory. This file will contains the build information of your project. Here the sample of appbox.plist ?xml version= 1.0 encoding= UTF-8 ? !DOCTYPE plist PUBLIC -//Apple//DTD PLIST 1.0//EN http://www.apple.com/DTDs/PropertyList-1.0.dtd plist version= 1.0 dict key project /key string TestJenkins.xcodeproj /string key scheme /key string TestJenkins /string key buildtype /key string development /string key teamid /key string 4F7SW76LL6 /string key keepsamelink /key true/ key dropboxfoldername /key string /string key email /key string user@example.com /string key personalmessage /key string Test Build /string /dict /plist appBox.plist key description - project (string, required)\u200a\u2014\u200aName of the Xcode project/workspace file. Project must be manage signing automatically. scheme (string, required)\u200a\u2014\u200aName of the scheme to build. Project scheme must be shared . buildtype (string, required)\u200a\u2014\u200a\"ad-hoc\", \"enterprise\", \"app-store\" or \"development\" teamid (string, required)\u200a\u2014\u200aDevelopment TeamId. email (string, required)\u200a\u2014\u200amail build share url personalmessage (string, optional)\u200a\u2014\u200aAttach personal message in email keepsamelink (boolean, optional)\u200a\u2014\u200atrue/false ( read more ) dropboxfoldername (string, optional)\u200a\u2014\u200aCustom Dropbox Folder Name (By default will be bundle identifier). itcemail (string, optional) - iTunesConnect/AppStore Connect email (if buildtype is app-store). 1.2 Private keys and Provisioning Profiles All your private keys and provisioning profile should be in a directory called cert inside project main directory. Directory cert will include certificates and provisioning profile and plist with name appbox.plist Note \u200a\u2014\u200aAll private key must have some valid password. ?xml version= 1.0 encoding= UTF-8 ? !DOCTYPE plist PUBLIC -//Apple//DTD PLIST 1.0//EN http://www.apple.com/DTDs/PropertyList-1.0.dtd plist version= 1.0 array dict key name /key string Certificates.p12 /string key password /key string password /string /dict dict key name /key string Test_Jenkins_Developer.mobileprovision /string /dict dict key name /key string Test_Jenkins_InHouse.mobileprovision /string /dict /array /plist You can download demo appbox.plist and cert/appbox.plist from here . 1.3 Project Directory Structure After full setup, your project directory will be look like this - ProjectName (This is your project main directory) |- ProjectName |- Project.xcodeproj |- Project.xcworkspace |- appbox.plist (Appbox project setting file) |- cert (Appbox project certificate directory) | |- appbox.plist (Appbox certificate information file) | |- Cetificates1.p12 | |- Cetificates2.p12 | |- Project-adhoc.mobileprovision | |- Project-enterprice.mobileprovision | |- Project-appstore.mobileprovision |- ProjectTests (If any) 2. Setup Jenkins Project and Configurations 2.1 Create Project Create a new Jenkins project using freestyle option. Jenkins \u2192 New Item \u2192 Enter project name \u2192 Freestyle project \u2192 Click OK. 2.2 General Configurations In general configurations, you can Enable project-based security . In which you can manage the different project member with their access level. 2.3 Source Code Management Check Git in the section Source Code Management and enter the url of the repository and select the right credentials. 2.4 Build Triggers In Build triggers section check the option to Build when a change is pushed to GitLab . This will trigger the build when a change is pushed to Gitlab. There\u2019s a small bug with the plugin key generation so Save or Apply the changes to the job first, then under Advanced generate a key . Gitlab requires this key. Here you can also apply the filter by branches name. 2.5 Connect GitLab And Jenkins In this setup you\u2019ll setup your GitLab repository for Jenkins, so that Jenkins is automatically notified when there\u2019s a new commit to the GitLab repository and can commit successful builds back to it. To do this: 2.5.1 Open GitLab and browse to the GitLab page for the project. 2.5.2 Go to the Project Integration page via Settings \u2192 Integrations 2.5.3 Configure a new Jenkins webhook as follows: \u200a\u2014\u200aIn the URL field, enter the Jenkins Gitlab CI service URL from Step 2.4 . \u2014 In the Secret Token field, enter the Secret token form Setup 2.4. \u2014 In the list of triggers, select the events that should trigger a new Jenkins build, such as new Push Events or Accept Merge Request Events . \u2014 Click Add Webhook. 2.6 Build In Build step, we need to execute AppBox with current workspace. So, add the following command /Applications/AppBox.app/Contents/MacOS/AppBox build=$WORKSPACE Make sure AppBox must be available in your Applications directory. build \u200a\u2014\u200aAlways will be $WORKSPACE (required) scheme \u200a\u2014\u200ahere you can override the scheme name from appbox.plist in step 1.1 (optional) buildtype \u200a\u2014\u200ahere you can override the buildtype from appbox.plist in step 1.1 (optional) Example /Applications/AppBox.app/Contents/MacOS/AppBox build=$WORKSPACE scheme=ProjectLIVE buildtype=app-store 2.7 Post-build Actions Finally, in the Post-build Actions step we need to Publish build status to GitLab commit and Add note with build status on Gitlab merge request. This enables the feedback and gives us pretty indicators in GitLab commit and merge request. Your Continuous Integration (CI) and Continuous Delivery (CD) with Jenkins and AppBox is now ready for use!","title":"How to use AppBox with Jenkins and GitLab for CI and CD?"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#how-to-use-appbox-with-jenkins-and-gitlab-for-ci-and-cd","text":"Before beginning to this article make sure Jenkins Server and AppBox is already setup and running. This article covers how to use Jenkins and AppBox for Build Automation and Deployment of Development, Ad-Hoc and In-house (Enterprise) iOS applications directly to the devices from your Dropbox account.","title":"How to use AppBox with Jenkins and GitLab for CI and CD?"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#1-setup-xcode-project-for-appbox","text":"","title":"1. Setup Xcode Project for AppBox"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#11-appbox-project-setting-plist","text":"Add a appbox.plist file in your project main directory. This file will contains the build information of your project. Here the sample of appbox.plist ?xml version= 1.0 encoding= UTF-8 ? !DOCTYPE plist PUBLIC -//Apple//DTD PLIST 1.0//EN http://www.apple.com/DTDs/PropertyList-1.0.dtd plist version= 1.0 dict key project /key string TestJenkins.xcodeproj /string key scheme /key string TestJenkins /string key buildtype /key string development /string key teamid /key string 4F7SW76LL6 /string key keepsamelink /key true/ key dropboxfoldername /key string /string key email /key string user@example.com /string key personalmessage /key string Test Build /string /dict /plist appBox.plist key description - project (string, required)\u200a\u2014\u200aName of the Xcode project/workspace file. Project must be manage signing automatically. scheme (string, required)\u200a\u2014\u200aName of the scheme to build. Project scheme must be shared . buildtype (string, required)\u200a\u2014\u200a\"ad-hoc\", \"enterprise\", \"app-store\" or \"development\" teamid (string, required)\u200a\u2014\u200aDevelopment TeamId. email (string, required)\u200a\u2014\u200amail build share url personalmessage (string, optional)\u200a\u2014\u200aAttach personal message in email keepsamelink (boolean, optional)\u200a\u2014\u200atrue/false ( read more ) dropboxfoldername (string, optional)\u200a\u2014\u200aCustom Dropbox Folder Name (By default will be bundle identifier). itcemail (string, optional) - iTunesConnect/AppStore Connect email (if buildtype is app-store).","title":"1.1 AppBox Project setting plist"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#12-private-keys-and-provisioning-profiles","text":"All your private keys and provisioning profile should be in a directory called cert inside project main directory. Directory cert will include certificates and provisioning profile and plist with name appbox.plist Note \u200a\u2014\u200aAll private key must have some valid password. ?xml version= 1.0 encoding= UTF-8 ? !DOCTYPE plist PUBLIC -//Apple//DTD PLIST 1.0//EN http://www.apple.com/DTDs/PropertyList-1.0.dtd plist version= 1.0 array dict key name /key string Certificates.p12 /string key password /key string password /string /dict dict key name /key string Test_Jenkins_Developer.mobileprovision /string /dict dict key name /key string Test_Jenkins_InHouse.mobileprovision /string /dict /array /plist You can download demo appbox.plist and cert/appbox.plist from here .","title":"1.2 Private keys and Provisioning Profiles"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#13-project-directory-structure","text":"After full setup, your project directory will be look like this - ProjectName (This is your project main directory) |- ProjectName |- Project.xcodeproj |- Project.xcworkspace |- appbox.plist (Appbox project setting file) |- cert (Appbox project certificate directory) | |- appbox.plist (Appbox certificate information file) | |- Cetificates1.p12 | |- Cetificates2.p12 | |- Project-adhoc.mobileprovision | |- Project-enterprice.mobileprovision | |- Project-appstore.mobileprovision |- ProjectTests (If any)","title":"1.3 Project Directory Structure"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#2-setup-jenkins-project-and-configurations","text":"","title":"2. Setup Jenkins Project and Configurations"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#21-create-project","text":"Create a new Jenkins project using freestyle option. Jenkins \u2192 New Item \u2192 Enter project name \u2192 Freestyle project \u2192 Click OK.","title":"2.1 Create Project"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#22-general-configurations","text":"In general configurations, you can Enable project-based security . In which you can manage the different project member with their access level.","title":"2.2 General Configurations"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#23-source-code-management","text":"Check Git in the section Source Code Management and enter the url of the repository and select the right credentials.","title":"2.3 Source Code Management"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#24-build-triggers","text":"In Build triggers section check the option to Build when a change is pushed to GitLab . This will trigger the build when a change is pushed to Gitlab. There\u2019s a small bug with the plugin key generation so Save or Apply the changes to the job first, then under Advanced generate a key . Gitlab requires this key. Here you can also apply the filter by branches name.","title":"2.4 Build Triggers"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#25-connect-gitlab-and-jenkins","text":"In this setup you\u2019ll setup your GitLab repository for Jenkins, so that Jenkins is automatically notified when there\u2019s a new commit to the GitLab repository and can commit successful builds back to it. To do this: 2.5.1 Open GitLab and browse to the GitLab page for the project. 2.5.2 Go to the Project Integration page via Settings \u2192 Integrations 2.5.3 Configure a new Jenkins webhook as follows: \u200a\u2014\u200aIn the URL field, enter the Jenkins Gitlab CI service URL from Step 2.4 . \u2014 In the Secret Token field, enter the Secret token form Setup 2.4. \u2014 In the list of triggers, select the events that should trigger a new Jenkins build, such as new Push Events or Accept Merge Request Events . \u2014 Click Add Webhook.","title":"2.5 Connect GitLab And Jenkins"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#26-build","text":"In Build step, we need to execute AppBox with current workspace. So, add the following command /Applications/AppBox.app/Contents/MacOS/AppBox build=$WORKSPACE Make sure AppBox must be available in your Applications directory. build \u200a\u2014\u200aAlways will be $WORKSPACE (required) scheme \u200a\u2014\u200ahere you can override the scheme name from appbox.plist in step 1.1 (optional) buildtype \u200a\u2014\u200ahere you can override the buildtype from appbox.plist in step 1.1 (optional) Example /Applications/AppBox.app/Contents/MacOS/AppBox build=$WORKSPACE scheme=ProjectLIVE buildtype=app-store","title":"2.6 Build"},{"location":"ContinuousIntegration/usewithjenkinsandgitlab/#27-post-build-actions","text":"Finally, in the Post-build Actions step we need to Publish build status to GitLab commit and Add note with build status on Gitlab merge request. This enables the feedback and gives us pretty indicators in GitLab commit and merge request. Your Continuous Integration (CI) and Continuous Delivery (CD) with Jenkins and AppBox is now ready for use!","title":"2.7 Post-build Actions"},{"location":"FAQs/cimultiplexcodeversion/","text":"","title":"Cimultiplexcodeversion"},{"location":"FAQs/deleteapplication/","text":"How to delete an uploaded app or disable a link on AppBox? You can delete an Application from AppBox Dashboard or you can manually delete IPA and Manifest file from your Dropbox account.","title":"How to delete an uploaded app or disable a link on AppBox?"},{"location":"FAQs/deleteapplication/#how-to-delete-an-uploaded-app-or-disable-a-link-on-appbox","text":"You can delete an Application from AppBox Dashboard or you can manually delete IPA and Manifest file from your Dropbox account.","title":"How to delete an uploaded app or disable a link on AppBox?"},{"location":"FAQs/installationlimit/","text":"Is there any installation limit per app on AppBox? No. AppBox has no limit for per-app installation. You can install app thousands or millions of times.","title":"Is there any installation limit per app on AppBox?"},{"location":"FAQs/installationlimit/#is-there-any-installation-limit-per-app-on-appbox","text":"No. AppBox has no limit for per-app installation. You can install app thousands or millions of times.","title":"Is there any installation limit per app on AppBox?"},{"location":"FAQs/installationlinkexpire/","text":"How long will Application Installation links be available on AppBox? The installation links will be available until you've deleted the IPA file from your Dropbox account or from AppBox Dashboard.","title":"How long will Application Installation links be available on AppBox?"},{"location":"FAQs/installationlinkexpire/#how-long-will-application-installation-links-be-available-on-appbox","text":"The installation links will be available until you've deleted the IPA file from your Dropbox account or from AppBox Dashboard.","title":"How long will Application Installation links be available on AppBox?"},{"location":"FAQs/maximumuploadsize/","text":"What is the Maximum Upload Application Size? The maximum upload size is equal to available storage in your Dropbox account. AppBox uploads larger IPA file in the chunk .","title":"What is the Maximum Upload Application Size?"},{"location":"FAQs/maximumuploadsize/#what-is-the-maximum-upload-application-size","text":"The maximum upload size is equal to available storage in your Dropbox account. AppBox uploads larger IPA file in the chunk .","title":"What is the Maximum Upload Application Size?"},{"location":"FAQs/sharexcodeprojectschemes/","text":"How to share Xcode Project Schemes? Schemes that are not marked shared in Xcode cannot be built outside Xcode, and this affects a CI server like Jenkins and other as well. Here the process of sharing a Xcode project scheme: Navigate to Product - Scheme - Manage Schemes You will see a list of schemes, with each denoted as being shared or not. Make sure that the shared checkbox for your scheme is marked, then click OK. Finally, once you have marked the scheme as shared, you will have to add the files that Xcode has generated to your git repository as well.","title":"How to share Xcode Project Schemes?"},{"location":"FAQs/sharexcodeprojectschemes/#how-to-share-xcode-project-schemes","text":"Schemes that are not marked shared in Xcode cannot be built outside Xcode, and this affects a CI server like Jenkins and other as well. Here the process of sharing a Xcode project scheme: Navigate to Product - Scheme - Manage Schemes You will see a list of schemes, with each denoted as being shared or not. Make sure that the shared checkbox for your scheme is marked, then click OK. Finally, once you have marked the scheme as shared, you will have to add the files that Xcode has generated to your git repository as well.","title":"How to share Xcode Project Schemes?"},{"location":"Features/downloadipa/","text":"Download IPA file from AppBox Installation Webpage Appbox has a feature which allows you to download your IPA file from AppBox Installation webpage. You can enable/disable download IPA feature from AppBox preferences for future upload. This feature allows you to direct download your IPA file from AppBox Installation page.","title":"Download IPA file from AppBox Installation Webpage"},{"location":"Features/downloadipa/#download-ipa-file-from-appbox-installation-webpage","text":"Appbox has a feature which allows you to download your IPA file from AppBox Installation webpage. You can enable/disable download IPA feature from AppBox preferences for future upload. This feature allows you to direct download your IPA file from AppBox Installation page.","title":"Download IPA file from AppBox Installation Webpage"},{"location":"Features/keepsamelink/","text":"Keep Same Link 1. What is keep same link? This feature will keep same short URL for all future build/IPA uploaded with same bundle identifier. If this option is enabled, you can also download the previous build with the same URL. When you've uploaded more than one app with \"Keep Same Link\" option enable and open the short URL in your iOS Device, you'll see two option is there 1.1. Install Application Install Application button will always install the latest build. (Demo URL - https://goo.gl/jsr9JO) 1.2. Install the Previous Build Install Previous Build button open another page, which contains all list of all uploaded with date and time based on iOS Device local. You can install any previous build from this page. 2. How to create two different links for the same build using Keep Same Link option? You can change the link by providing a \"Custom Dropbox Folder Name\" in \"Other Setting\". By default folder name will be the application bundle identifier. So, AppBox will keep the same link for the IPA file available in the same folder. 3. How to keep the same link but also hide the previous version from the installation page? You can do this from AppBox preferences by enabling \"Don't show the previous version on app installation page\" option. So, If you chose Keep Same Link during the upload and this option is enabled, AppBox installation page wouldn't show the previous version.","title":"Keep Same Link"},{"location":"Features/keepsamelink/#keep-same-link","text":"","title":"Keep Same Link"},{"location":"Features/keepsamelink/#1-what-is-keep-same-link","text":"This feature will keep same short URL for all future build/IPA uploaded with same bundle identifier. If this option is enabled, you can also download the previous build with the same URL. When you've uploaded more than one app with \"Keep Same Link\" option enable and open the short URL in your iOS Device, you'll see two option is there","title":"1. What is keep same link?"},{"location":"Features/keepsamelink/#11-install-application","text":"Install Application button will always install the latest build. (Demo URL - https://goo.gl/jsr9JO)","title":"1.1. Install Application"},{"location":"Features/keepsamelink/#12-install-the-previous-build","text":"Install Previous Build button open another page, which contains all list of all uploaded with date and time based on iOS Device local. You can install any previous build from this page.","title":"1.2. Install the Previous Build"},{"location":"Features/keepsamelink/#2-how-to-create-two-different-links-for-the-same-build-using-keep-same-link-option","text":"You can change the link by providing a \"Custom Dropbox Folder Name\" in \"Other Setting\". By default folder name will be the application bundle identifier. So, AppBox will keep the same link for the IPA file available in the same folder.","title":"2. How to create two different links for the same build using Keep Same Link option?"},{"location":"Features/keepsamelink/#3-how-to-keep-the-same-link-but-also-hide-the-previous-version-from-the-installation-page","text":"You can do this from AppBox preferences by enabling \"Don't show the previous version on app installation page\" option. So, If you chose Keep Same Link during the upload and this option is enabled, AppBox installation page wouldn't show the previous version.","title":"3. How to keep the same link but also hide the previous version from the installation page?"},{"location":"Features/moredetails/","text":"Get Application Details on AppBox Installation Web Page This feature will provide an extra option in AppBox installation page for your iOS application. In this option, you can see various details about your iOS application. Like, IPA file size, Minimum iOS Version, Device Family, Upload Date, Provisioning Profile Type, Provisioning Profile Create Date, Provisioning Profile Expire Date, Development Team, and Provisioned Device. You can enable/disable this feature from AppBox general preferences.","title":"Get Application Details on AppBox Installation Web Page"},{"location":"Features/moredetails/#get-application-details-on-appbox-installation-web-page","text":"This feature will provide an extra option in AppBox installation page for your iOS application. In this option, you can see various details about your iOS application. Like, IPA file size, Minimum iOS Version, Device Family, Upload Date, Provisioning Profile Type, Provisioning Profile Create Date, Provisioning Profile Expire Date, Development Team, and Provisioned Device. You can enable/disable this feature from AppBox general preferences.","title":"Get Application Details on AppBox Installation Web Page"},{"location":"Features/uploadchunksize/","text":"Upload Chunk Size Chunk size is used to upload your large IPA file in the chunk. Default chunk size is 100MB, means AppBox will upload an IPA file with 100MB partitions. You can set chunk size from AppBox Preferences (\u2318 + ,). Examples - 150 MB means, If you'll try to upload a 2GB IPA then AppBox will break IPA into 14 part and upload them separately 2GB = 2048MB 2048/150 = 13.65 ~= 14 Now AppBox will break 2 GB IPA into 14 part and here 13 part will be equally separated into 150MB and last part will be the size of 98MB (13 * 150) + 98 = 2048MB = 2GB Similarly, if you'll select 100MB chunk size in preferences, AppBox will break 2GB (2048MB) IPA file into 21 part 2GB = 2048MB 2048/100 = 20.48 ~= 21 here 20 part will be equally separated into 100MB and last part will be the size of 48MB (20 * 100) + 48 = 2048 MB = 2GB","title":"Upload Chunk Size"},{"location":"Features/uploadchunksize/#upload-chunk-size","text":"Chunk size is used to upload your large IPA file in the chunk. Default chunk size is 100MB, means AppBox will upload an IPA file with 100MB partitions. You can set chunk size from AppBox Preferences (\u2318 + ,).","title":"Upload Chunk Size"},{"location":"Features/uploadchunksize/#examples-","text":"150 MB means, If you'll try to upload a 2GB IPA then AppBox will break IPA into 14 part and upload them separately 2GB = 2048MB 2048/150 = 13.65 ~= 14 Now AppBox will break 2 GB IPA into 14 part and here 13 part will be equally separated into 150MB and last part will be the size of 98MB (13 * 150) + 98 = 2048MB = 2GB Similarly, if you'll select 100MB chunk size in preferences, AppBox will break 2GB (2048MB) IPA file into 21 part 2GB = 2048MB 2048/100 = 20.48 ~= 21 here 20 part will be equally separated into 100MB and last part will be the size of 48MB (20 * 100) + 48 = 2048 MB = 2GB","title":"Examples -"},{"location":"GettingStarted/useappbox/","text":"Installation Using curl You can install AppBox by running following command in your terminal - curl -s https://getappbox.com/install.sh | bash Manual If you face any issue using above command then you can manually install AppBox by downloading it from here . After that, unzip AppBox.app.zip and move AppBox.app into /Applications directory. How to use AppBox Download and Open AppBox Link your Dropbox account with AppBox. Select and upload the iOS application \"OR\" select project/workspace to archive and upload the iOS application. Send the link to your testers, clients, friends or even use it yourself. Open the link in the browser on the device and click on install.","title":"How to use AppBox?"},{"location":"GettingStarted/useappbox/#installation","text":"","title":"Installation"},{"location":"GettingStarted/useappbox/#using-curl","text":"You can install AppBox by running following command in your terminal - curl -s https://getappbox.com/install.sh | bash","title":"Using curl"},{"location":"GettingStarted/useappbox/#manual","text":"If you face any issue using above command then you can manually install AppBox by downloading it from here . After that, unzip AppBox.app.zip and move AppBox.app into /Applications directory.","title":"Manual"},{"location":"GettingStarted/useappbox/#how-to-use-appbox","text":"Download and Open AppBox Link your Dropbox account with AppBox. Select and upload the iOS application \"OR\" select project/workspace to archive and upload the iOS application. Send the link to your testers, clients, friends or even use it yourself. Open the link in the browser on the device and click on install.","title":"How to use AppBox"}]}